
CONST_IP_TOS_NET_CTRL = 0b111
CONST_IP_TOS_INTNET_CTRL = 0b110
CONST_IP_TOS_CRITIC_ECP = 0b101
CONST_IP_TOS_FLASH_OVERRIDE = 0b100
CONST_IP_TOS_FLASH = 0b011
CONST_IP_TOS_IMMEDIATE = 0b010
CONST_IP_TOS_PRIORITY = 0b001
CONST_IP_TOS_ROUTINE = 0b000

CONST_IP_TOS_MIN_DELAY =       0b00010000
CONST_IP_TOS_MAX_THROUGHPUT =  0b00001000
CONST_IP_TOS_MAX_RELIABILITY = 0b00000100
CONST_IP_TOS_MIN_COST =        0b00000010
CONST_IP_TOS_NORMAL =          0b00000000
CONST_IP_TOS_EF = 0xb8


const_list = {
    "IP_TOS_NET_CTRL": CONST_IP_TOS_NET_CTRL,
    "IP_TOS_INTNET_CTRL": CONST_IP_TOS_INTNET_CTRL,
    "IP_TOS_CRITIC_ECP": CONST_IP_TOS_CRITIC_ECP,
    "IP_TOS_FLASH_OVERRIDE": CONST_IP_TOS_FLASH_OVERRIDE,
    "IP_TOS_FLASH": CONST_IP_TOS_FLASH,
    "IP_TOS_IMMEDIATE": CONST_IP_TOS_IMMEDIATE,
    "IP_TOS_PRIORITY": CONST_IP_TOS_PRIORITY,
    "IP_TOS_ROUTINE": CONST_IP_TOS_ROUTINE,
    "IP_TOS_MIN_DELAY": CONST_IP_TOS_MIN_DELAY,
    "IP_TOS_MAX_THROUGHPUT": CONST_IP_TOS_MAX_THROUGHPUT,
    "IP_TOS_MAX_RELIABILITY": CONST_IP_TOS_MAX_RELIABILITY,
    "IP_TOS_MIN_COST": CONST_IP_TOS_MIN_COST,
    "IP_TOS_MIN_NORMAL": CONST_IP_TOS_NORMAL,
    "IP_TOS_EF": CONST_IP_TOS_EF,
    "IP_PROTO_ICMP": 0x01,
    "IP_PROTO_TCP": 0x06,
    "IP_PROTO_UDP": 0x11,
    "ETH_PROTO_IPV4": 0x0800,
    "ETH_PROTO_IPV6": 0x86dd,
    "ETH_PROTO_ARP": 0x0806,
    "HTTPS": 0x1bb,
    "DNS": 0x35,
}


def const_value(const: str) -> int:
    return const_list.get(const, 0)


ip_proto_name = {
      'HOPOPT':           0x00,
      'ICMP':             0x01,
      'IGMP':             0x02,
      'GGP':              0x03,
      'IP-in-IP':         0x04,
      'ST':               0x05,
      'TCP':              0x06,
      'CBT':              0x07,
      'EGP':              0x08,
      'IGP':              0x09,
      'BBN-RCC-MON':      0x0A,
      'NVP-II':           0x0B,
      'PUP':              0x0C,
      'ARGUS':            0x0D,
      'EMCON':            0x0E,
      'XNET':             0x0F,
      'CHAOS':            0x10,
      'UDP':              0x11,
      'MUX':              0x12,
      'DCN-MEAS':         0x13,
      'HMP':              0x14,
      'PRM':              0x15,
      'XNS-IDP':          0x16,
      'TRUNK-1':          0x17,
      'TRUNK-2':          0x18,
      'LEAF-1':           0x19,
      'LEAF-2':           0x1A,
      'RDP':              0x1B,
      'IRTP':             0x1C,
      'ISO-TP4':          0x1D,
      'NETBLT':           0x1E,
      'MFE-NSP':          0x1F,
      'MERIT-INP':        0x20,
      'DCCP':             0x21,
      '3PC':              0x22,
      'IDPR':             0x23,
      'XTP':              0x24,
      'DDP':              0x25,
      'IDPR-CMTP':        0x26,
      'TP++':             0x27,
      'IL':               0x28,
      'IPv6':             0x29,
      'SDRP':             0x2A,
      'IPv6-Route':       0x2B,
      'IPv6-Frag':        0x2C,
      'IDRP':             0x2D,
      'RSVP':             0x2E,
      'GRE':              0x2F,
      'DSR':              0x30,
      'BNA':              0x31,
      'ESP':              0x32,
      'AH':               0x33,
      'I-NLSP':           0x34,
      'SwIPe':            0x35,
      'NARP':             0x36,
      'MOBILE':           0x37,
      'TLSP':             0x38,
      'SKIP':             0x39,
      'IPv6-ICMP':        0x3A,
      'IPv6-NoNxt':       0x3B,
      'IPv6-Opts':        0x3C,
      '':                 0x3D,
      'CFTP':             0x3E,
      '':                 0x3F,
      'SAT-EXPAK':        0x40,
      'KRYPTOLAN':        0x41,
      'RVD':              0x42,
      'IPPC':             0x43,
      '':                 0x44,
      'SAT-MON':          0x45,
      'VISA':             0x46,
      'IPCU':             0x47,
      'CPNX':             0x48,
      'CPHB':             0x49,
      'WSN':              0x4A,
      'PVP':              0x4B,
      'BR-SAT-MON':       0x4C,
      'SUN-ND':           0x4D,
      'WB-MON':           0x4E,
      'WB-EXPAK':         0x4F,
      'ISO-IP':           0x50,
      'VMTP':             0x51,
      'SECURE-VMTP':      0x52,
      'VINES':            0x53,
      'TTP':              0x54,
      'IPTM':             0x54,
      'NSFNET-IGP':       0x55,
      'DGP':              0x56,
      'TCF':              0x57,
      'EIGRP':            0x58,
      'OSPF':             0x59,
      'Sprite-RPC':       0x5A,
      'LARP':             0x5B,
      'MTP':              0x5C,
      'AX.25':            0x5D,
      'OS':               0x5E,
      'MICP':             0x5F,
      'SCC-SP':           0x60,
      'ETHERIP':          0x61,
      'ENCAP':            0x62,
      '':                 0x63,
      'GMTP':             0x64,
      'IFMP':             0x65,
      'PNNI':             0x66,
      'PIM':              0x67,
      'ARIS':             0x68,
      'SCPS':             0x69,
      'QNX':              0x6A,
      'A/N':              0x6B,
      'IPComp':           0x6C,
      'SNP':              0x6D,
      'Compaq-Peer':      0x6E,
      'IPX-in-IP':        0x6F,
      'VRRP':             0x70,
      'PGM':              0x71,
      '':                 0x72,
      'L2TP':             0x73,
      'DDX':              0x74,
      'IATP':             0x75,
      'STP':              0x76,
      'SRP':              0x77,
      'UTI':              0x78,
      'SMP':              0x79,
      'SM':               0x7A,
      'PTP':              0x7B,
      'IS-IS:over:IPv4':  0x7C,
      'FIRE':             0x7D,
      'CRTP':             0x7E,
      'CRUDP':            0x7F,
      'SSCOPMCE':         0x80,
      'IPLT':             0x81,
      'SPS':              0x82,
      'PIPE':             0x83,
      'SCTP':             0x84,
      'FC':               0x85,
      'RSVP-E2E-IGNORE':  0x86,
      'Mobility:Header':  0x87,
      'UDPLite':          0x88,
      'MPLS-in-IP':       0x89,
      'manet':            0x8A,
      'HIP':              0x8B,
      'Shim6':            0x8C,
      'WESP':             0x8D,
      'ROHC':             0x8E,
      'Ethernet':         0x8F,
}

def ip_proto_name_to_int(proto_name: str) -> int:
    return ip_proto_name.get(proto_name, 0)
