
from packet.layers.ntp import Ntp

ntp_packet = [
    0xd9, 0x0, 0x11, 0xe9, 0x0, 0x0, 0x10, 0xb4, 0x0, 0x4,
    0xdf, 0xa0, 0x0, 0x0, 0x0, 0x0, 0xe5, 0xde, 0xdd, 0xd2,
    0x83, 0xb, 0x21, 0x9c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe5, 0xde,
    0xdd, 0xda, 0x5e, 0xf2, 0xa2, 0x49, 0x63, 0x68, 0x0, 0x0,
    0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
]


def test_ntp_leap_indicator():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.leap_indicator == 3)


def test_ntp_stratum():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.stratum == 0)


def test_ntp_poll():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.poll == 17)


def test_ntp_precision():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.precision == 0xe9)


def test_ntp_precision():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.precision == 0xe9)


def test_root_delay():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.root_delay == 0x10b4)


def test_root_dispersion():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.root_dispersion == 0x0004dfa0)


def test_ref_id():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.ref_id == 0x00000000)


def test_ref_timestamp():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.ref_timestamp == 0xe5deddd2830b219c)


def test_origin_timestamp():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.origin_timestamp == 0x00)


def test_recv_timestamp():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.recv_timestamp == 0x00)


def test_transmit_timestamp():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.transmit_timestamp == 0xe5deddda5ef2a249)


def test_key_id():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.optional_ext == 0x63680000)


def test_msg_digest():
    pkt = Ntp(bytes(ntp_packet))
    assert (pkt.msg_digest == bytes([
        0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
    ]))
